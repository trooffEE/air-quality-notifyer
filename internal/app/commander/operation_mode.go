package commander

import (
	"air-quality-notifyer/internal/app/keypads"
	"fmt"

	tgbotapi "github.com/OvyFlash/telegram-bot-api"
	"go.uber.org/zap"
)

func (c *Commander) OperationMode(update tgbotapi.Update) {
	msg := tgbotapi.NewEditMessageText(
		update.CallbackQuery.Message.Chat.ID,
		update.CallbackQuery.Message.MessageID,
		fmt.Sprintf("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ —Ç—Ä–µ—Ö —Ä–µ–∂–∏–º–æ–≤ —Ä–∞–±–æ—Ç—ã –¥–ª—è –µ–≥–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:\n\n–ï—Å–ª–∏ –Ω–µ –∑–Ω–∞–π—Ç–µ –∫–∞–∫–æ–π —Ä–µ–∂–∏–º –≤—ã–±—Ä–∞—Ç—å, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ \"%s\", —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∏—Ö", keypads.OperatingModeFAQFromSetupText),
	)

	markup := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData(keypads.SetOperationModeCityText, keypads.SetOperationModeCityData),
			tgbotapi.NewInlineKeyboardButtonData(keypads.SetOperationModeDistrictText, keypads.SetOperationModeDistrictData),
			tgbotapi.NewInlineKeyboardButtonData(keypads.SetOperationModeHomeText, keypads.SetOperationModeHomeData),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData(keypads.OperatingModeFAQFromSetupText, keypads.OperatingModeFAQFromSetupData),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData(keypads.BackToMenuText, keypads.BackToMenuData),
		),
	)

	if err := c.Edit(EditMessageConfig{Msg: msg, Markup: &markup}); err != nil {
		zap.L().Error("Error sending operating_mode message", zap.Error(err))
	}
}

func (c *Commander) OperatingModeFaq(update tgbotapi.Update) {
	markup := tgbotapi.NewInlineKeyboardMarkup()

	if update.CallbackQuery.Data == keypads.OperatingModeFAQFromSetupData {
		markup.InlineKeyboard = append(markup.InlineKeyboard, tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData(keypads.OperationModeBackText, keypads.OperationModeData),
		))
	}

	markup.InlineKeyboard = append(markup.InlineKeyboard, tgbotapi.NewInlineKeyboardRow(
		tgbotapi.NewInlineKeyboardButtonData(keypads.BackToMenuText, keypads.BackToMenuData),
	))

	msg := tgbotapi.NewEditMessageText(
		update.CallbackQuery.Message.Chat.ID,
		update.CallbackQuery.Message.MessageID,
		fmt.Sprintf(
			"‚öôÔ∏è <strong>–†–µ–∂–∏–º—ã —Ä–∞–±–æ—Ç—ã</strong> ‚öôÔ∏è\n\n"+
				"üèô <i>–ì–æ—Ä–æ–¥</i> üèô\n\n"+
				"–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã, –≤ –∫–æ—Ç–æ—Ä–æ–º –±–æ—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ–ø–æ–≤–µ—â–µ–Ω–∏—è –æ—Ç –¥–∞—Ç—á–∏–∫–æ–≤ –ø–æ <strong>–≤—Å–µ–º—É –≥–æ—Ä–æ–¥—É</strong>. –î–∞–Ω–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª —Å–ª–µ–¥—É–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å, –µ—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–ª–µ–¥–∏—Ç—å –∑–∞ –æ–±—â–∏–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –≤–æ–∑–¥—É—Ö–∞ –≤ –≥–æ—Ä–æ–¥–µ üçÉ\n\n\n"+
				"üèò <i>–†–∞–π–æ–Ω</i> üèò\n\n"+
				"–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã, –≤ –∫–æ—Ç–æ—Ä–æ–º –±–æ—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ–ø–æ–≤–µ—â–µ–Ω–∏—è –æ—Ç –¥–∞—Ç—á–∏–∫–æ–≤ –ø–æ <strong>–≤—ã–±—Ä–∞–Ω–Ω–æ–º—É —Ä–∞–π–æ–Ω—É</strong> –ö–µ–º–µ—Ä–æ–≤–æ. –î–∞–Ω–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª —Å–ª–µ–¥—É–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å, –µ—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–ª–µ–¥–∏—Ç—å –∑–∞ –∫–æ–Ω–µ–∫—Ä–µ—Ç–Ω—ã–º —Ä–∞–π–æ–Ω–æ–º/—Ä–∞–π–æ–Ω–∞–º–∏ –≥–æ—Ä–æ–¥–∞ üçÉ\n\n\n"+
				"üè° <i>–î–æ–º</i> üè°\n\n"+
				"–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã, –≤ –∫–æ—Ç–æ—Ä–æ–º –±–æ—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ–ø–æ–≤–µ—â–µ–Ω–∏—è –æ—Ç –¥–∞—Ç—á–∏–∫–æ–≤ <strong>–≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –∫–∏–ª–æ–º–µ—Ç—Ä–∞ –æ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –º–µ—Å—Ç–∞ –Ω–∞ –∫–∞—Ä—Ç–µ –∏–ª–∏ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –≤ —Ä—É—á–Ω—É—é –≤–∞–º–∏</strong>. –î–∞–Ω–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª —Å–ª–µ–¥—É–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å, –µ—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–ª–µ–¥–∏—Ç—å –∑–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–º–∏ –¥–∞—Ç—á–∏–∫–∞–º–∏ üçÉ\n\n",
		),
	)

	if err := c.Edit(EditMessageConfig{Msg: msg, Markup: &markup}); err != nil {
		zap.L().Error("Error sending operating_mode_faq message", zap.Error(err))
	}
}
